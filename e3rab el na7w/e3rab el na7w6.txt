import re
pattern1 = "(^ي)"
pattern2 = "(^ال)"
pattern3 = "$(ت)"
pattern4 = "[أدجحخهعغفقثصضشستنمكطظزوةىرؤءئذ]"
pattern5 = "(في)*(من)*(إلى)*"
sentence = "سارة تأكل الأكل"
low = sentence.split(" ")
mobtada = []
fe3l = []
fa3el = []
fe3lmad = []
maf3ol_beh = []
tme3rab = []
hrofgar = ["من", "إلى", "في"]
esmmgror = []
print(sentence, " "*4, "\n")
for i in range(len(low)):
    match1 = re.match(pattern1, low[i])
    match2 = re.match(pattern2, low[i])
    match3 = re.match(pattern3, low[i])
    match4 = re.match(pattern4, low[i])
    match5 = re.match(pattern5, low[i])
    if (match1 and len(fe3l) < 1 and low[i] not in tme3rab) or (low[i].startswith("ت") and len(fe3l) < 1
                                                                and low[i] not in tme3rab):
        fe3l.append(low[i])
        tme3rab.append(low[i])
        print(low[i], ": فعل مضارع مرفوع بالضمة")
    if low[i].endswith(u"ت") and low[i] not in tme3rab:
        fe3lmad.append(low[i])
        tme3rab.append(low[i])
        print(low[i], ": فعل ماض مبني على الفتح")
    if ((match2 or match4) and len(fe3l) > 0 and (re.match(pattern1, low[i-1]) or low[i-1].startswith("ت"))
        and len(fa3el) < 1 and len(mobtada) != 1
        and low[i] not in tme3rab) or (match4 and low[i].endswith(u"ة") and low[i-1].endswith(u"ت")
                                       and "ta2" not in fa3el and len(fa3el) < 1 and len(mobtada) != 1
                                       and low[i] not in tme3rab):
        fa3el.append(low[i])
        tme3rab.append(low[i])
        print(low[i], ": فاعل مرفوع بالضمة")
    if (match2 and (re.match(pattern1, low[i-1]) or low[i-1].startswith("ت"))
        and (re.match(pattern2, low[i-2]) or re.match(pattern4, low[i-2]))
        and len(fe3l) == 1 and low[i] not in tme3rab) or (match2 and re.match(pattern4, low[i-1])
                                                          and re.match(pattern1, low[i-2]) and len(maf3ol_beh) < 1
                                                          and len(fe3l) == 1 and low[i] not in tme3rab) or \
            (match2 and re.match(pattern2, low[i-1]) and re.match(pattern1, low[i-2]) and len(maf3ol_beh) < 1
             and len(fe3l) == 1 and low[i] not in tme3rab) or (match2 and re.match(pattern1, low[i-1])
                                                               and re.match(pattern4, low[i-2])
                                                               and len(fe3l) == 1 and low[i] not in tme3rab):
        maf3ol_beh.append(low[i])
        tme3rab.append(low[i])
        print(low[i], ": مفعول به منصوب بالفتحة")
    if match2 and low[i-1].endswith(u"ت") and len(maf3ol_beh) < 1 and low[i] not in tme3rab:
        fa3el.append("ta2")
        maf3ol_beh.append(low[i])
        tme3rab.append(low[i])
        print("و التاء ضمير متصل مبني في محل رفع فاعل")
        print(low[i], ": مفعول به منصوب بالفتحة")
    if (low[i - 1].endswith("ت") and len(fa3el) != 1 and "ta2" not in fa3el) or (low[i - 1] in maf3ol_beh
                                                                                 and low[i - 2].endswith("ت")
                                                                                 and "ta2" not in fa3el):
        fa3el.append("ta2")
        print("و التاء ضمير متصل مبني في محل رفع فاعل")
    if (match2 or match4) and i == 0 and len(mobtada) < 1 and low[i] not in tme3rab\
            and low[i] not in hrofgar:
        mobtada.append(low[i])
        tme3rab.append(low[i])
        print(low[i], u": مبتدأ مرفوع بالضمة")
    if low[i] in hrofgar and low[i] not in tme3rab:
        tme3rab.append(low[i])
        print(low[i], ": حرف جر ")
    if match2 and low[i-1] in hrofgar:
        esmmgror.append(low[i])
        tme3rab.append(low[i])
        print(low[i], ": اسم مجرور بالكسرة")
